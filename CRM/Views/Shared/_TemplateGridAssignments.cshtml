

@Html.Partial(nameof(EnumPartialPages._Partial_Rating))


@using (Html.DevExtreme().NamedTemplate("template-grid-assignments-by-lead"))
{
    @(Html.DevExtreme().DataGrid<LeadAssignmentVM>()
        .ID(new JS("'gridLeadAssignments'.concat(templateData.Id)"))
        .CommonConfigs()
        .DataSource(ds => ds.Mvc()
            .Controller(nameof(EnumController.LeadAssignments))
            .LoadAction("GetByLead")
            .LoadParams(new
            {
                id = new JS("templateData.Id")
            })
            .DeleteAction("Delete")
            .Key("Id")
        )
        .HeaderFilter(filter => filter.Visible(true))
        .Columns(c =>
        {
            c.AddFor(m => m.PartnerName)
                .CellTemplate(new TemplateName("template-grid-assignment-column-branch")).Caption("Partner");
            c.AddFor(m => m.PartnerBranchAddress)
                .AllowHeaderFiltering(false)
                .AllowSorting(false)
                .CellTemplate(new TemplateName("template-grid-assignment-column-branch-address")).Caption("");
            c.AddFor(m => m.StatusName)
                .CellTemplate(new TemplateName("template-grid-assignment-column-status")).Caption("Status");
            c.AddFor(m => m.AssignedOn)
                .CellTemplate(new TemplateName("template-grid-assignment-column-assigned-on"));
            c.Add()
                .AllowHeaderFiltering(false)
                .CellTemplate(new TemplateName("template-grid-assignment-column-action"));
        })
        .Editing(e => e
            .Mode(GridEditMode.Popup)
            .UseIcons(true)
            .AllowAdding(false)
            .AllowUpdating(false)
            .AllowDeleting(true)
            .Popup(DXGridConfigs.EditingPopup("LeadAssignment"))
        )
        .OnRowRemoved("function(e) { assignment.methods.refreshGridSearchBranches(); }")
        .OnToolbarPreparing("assignment.dxGrid.handlers.gridAssignmentsByLeadOnToolbarPreparing")
    )
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignments-by-partner"))
{
    @(Html.DevExtreme().DataGrid<LeadAssignmentVM>()
        .ID("gridLeadAssignments")
        .CommonConfigs()
        .DataSource(ds => ds.Mvc()
            .Controller(nameof(EnumController.LeadAssignments))
            .LoadAction("GetByPartner")
            .LoadParams(new
            {
                id = new JS("templateData.Id")
            })
            .Key("Id")
        )
        .HeaderFilter(filter => filter.Visible(true))
        .Columns(c =>
        {
            c.AddFor(m => m.LeadTypeName)
                .CellTemplate(new TemplateName("template-grid-assignment-column-lead")).Caption("Type");
            c.AddFor(m => m.LeadDetails)
                .Width("35%")
                .AllowHeaderFiltering(false)
                .AllowSorting(false)
                .CellTemplate(new TemplateName("template-grid-assignment-column-lead-details")).Caption("Details");
            c.AddFor(m => m.CustomerUnique)
                .Width("15%")
                .CellTemplate(new TemplateName("template-grid-assignment-column-customer")).Caption("Customer");
            c.AddFor(m => m.StatusName)
                .CellTemplate(new TemplateName("template-grid-assignment-column-status")).Caption("Status");
            c.AddFor(m => m.AssignedOn)
                .CellTemplate(new TemplateName("template-grid-assignment-column-assigned-on"));
            c.Add()
                .CellTemplate(new TemplateName("template-grid-assignment-column-action"));
        })
        .OnRowRemoved("function(e) { assignment.methods.refreshGridSearchBranches(); }")
        .OnToolbarPreparing("assignment.dxGrid.handlers.gridAssignmentsByPartnerOnToolbarPreparing")
    )
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignment-column-lead"))
{
    <img src="<%= data.LeadTypeImage %>" class="lead-type-img" />
    <b><%= data.LeadTypeName %></b>
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignment-column-lead-details"))
{
    <span><%= data.LeadDetails %></span>
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignment-column-customer"))
{
    <div class="d-flex">
        <span>
            <%= data.CustomerUnique %>

            <a data-toggle="tooltip"
               data-placement="bottom"
               data-html="true"
               title="<%= data.CustomerDetails %>">
                <span class="batch-icon batch-icon-zoom-in-alt text-priamry"></span>
            </a>
        </span>
    </div>
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignment-column-branch"))
{
    <img src="<%= data.PartnerLogo %>" class="grid-partner-logo" 
        data-toggle="tooltip" data-placement="bottom" title="<%= data.PartnerName %>"/>
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignment-column-branch-address"))
{
    <span>
        <%= data.PartnerBranchState %>, <%= data.PartnerBranchPostCode %>

        <a data-toggle="tooltip"
            data-placement="bottom"
            data-html="true"
            title="<%= data.PartnerBranchAddress %>">
                <span class="batch-icon batch-icon-zoom-in-alt text-priamry"></span>
        </a>
    </span>
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignment-column-status"))
{
    <div class="row m-0">
        <div class="col-12"><%= data.StatusTag %> <%= data.RatingTag %></div>
    </div>
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignment-column-assigned-on"))
{
    <div class="row m-0">
        <div class="col-12"><%= data.CreatedOnShortFormat %> <%= data.History %></div>
    </div>
    @*<span><%= data.CreatedOnShortFormat %></span>
    <a href="#/" data-toggle="tooltip"
        data-placement="bottom"
        data-html="true"
        title="<%= data.History %>">
        <span class="batch-icon batch-icon-zoom-in-alt text-priamry"></span>
    </a>*@
}

@using (Html.DevExtreme().NamedTemplate("template-grid-assignment-column-action"))
{
    @(Html.DevExtreme().SelectBox()
        .DataSource(new JS("data.Actions"))
        .ActionCommonConfigs()
        .OnSelectionChanged("assignment.handlers.onAssignmentActionChanged")
    )
}