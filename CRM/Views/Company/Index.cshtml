
@{
    ViewData["Title"] = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@(Html.DevExtreme().Form<Company>()
        .ID("form")
        .Items(items =>
        {
            items.AddGroup()
                .CssClass("form-first-group")
                .ColCount(3)
                .Items(groupItems =>
                {
                    groupItems.AddSimple().Template("<div class='form-avatar'></div>");
                    groupItems.AddGroup().Items(secondGroupItems =>
                    {
                        secondGroupItems.AddSimpleFor(m => m.Name);
                        secondGroupItems.AddSimpleFor(m => m.ABN);
                        secondGroupItems.AddSimpleFor(m => m.GST)
                            .Editor(e => e
                                .NumberBox().ShowSpinButtons(true)
                            );
                    });
                });
            items.AddGroup()
                .CssClass("form-second-group")
                //.ColCount(2)
                .Caption("Offices")
                .Items(groupItems => {
                    groupItems.AddSimple().Template(new TemplateName("grid-offices"));
                });
        })
        .FormData(@Model)
)

@using (Html.DevExtreme().NamedTemplate("grid-offices"))
{
    @(Html.DevExtreme().DataGrid<Office>()
        .ID("gridOffices")
        .ShowBorders(true)
        .HeaderFilter(f => f.Visible(false))
        .DataSource(d => d.Mvc()
            .Controller(nameof(EnumController.Offices))
            .LoadAction("GetOfficesByCompany")
            .LoadParams(new
            {
                companyId = @Model.Id
            })
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("Id")
        )
        .Paging(p => p.PageSize(5))
        .Columns(columns =>
        {
            columns.AddFor(m => m.Address.StreetAddress).Caption("Address");
            columns.AddFor(m => m.Address.Suburb).Caption("Suburb");
            columns.AddFor(m => m.Address.State).Caption("State");
            columns.AddFor(m => m.Address.PostCode).Caption("Postcode");
        })
        .Editing(e =>
            e.Mode(GridEditMode.Popup)
            .UseIcons(true)
            .AllowAdding(true)
            .AllowUpdating(true)
            .AllowDeleting(true)
            .Popup(p =>
                p.Title(nameof(Office))
                .ShowTitle(true)
                .DragEnabled(false)
                .CloseOnOutsideClick(true)
                .Position(pos => pos
                    .My(HorizontalAlignment.Center, VerticalAlignment.Top)
                    .At(HorizontalAlignment.Center, VerticalAlignment.Top)
                    .Of(new JS("window"))
                )
            )
        )
        .MasterDetail(m => m
            .Enabled(true)
            .Template(new TemplateName("grid-office-details"))
            .AutoExpandAll(false)
        )
        .Selection(s => s.Mode(SelectionMode.Single))
        .OnSelectionChanged(@<text>
            function(e) {
                e.component.collapseAll(-1);
                e.component.expandRow(e.currentSelectedRowKeys[0]);
            }
        </text>)
        .OnRowInserting(@<text>
            function (e) {
                e.data.companyId = @Model.Id
            }
        </text>)
    )
}

@using (Html.DevExtreme().NamedTemplate("grid-office-details"))
{
    @(Html.DevExtreme().TabPanel()
        .FocusStateEnabled(false)
        .ElementAttr("class", "tabPanel")
        .Items(items =>
        {
            items.Add()
                .Title("Agents")
                .Template(new TemplateName("grid-office-agents"))
                .Option("masterOffice", new { officeId = new JS("data.Id") });
        })
    )
}


@using (Html.DevExtreme().NamedTemplate("grid-office-agents"))
{
    @(Html.DevExtreme().DataGrid<Agent>()
        .ID("grid-office-agents-" + new JS("masterOffice.officeId"))
        .ShowBorders(true)
        .HeaderFilter(f => f.Visible(false))
        .DataSource(d => d.Mvc()
            .Controller(nameof(EnumController.Agents))
            .LoadAction("GetAgentsByOffice")
            .LoadParams(new
            {
                officeId = new JS("masterOffice.officeId")
            })
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("Id")
        )
        .Paging(p => p.PageSize(5))
        .Columns(columns =>
        {
            columns.AddFor(m => m.ContactName);
            columns.AddFor(m => m.ContactNumber);
            columns.AddFor(m => m.EMail);
        })
        .Editing(e =>
            e.Mode(GridEditMode.Popup)
            .UseIcons(true)
            .AllowAdding(true)
            .AllowUpdating(true)
            .AllowDeleting(true)
            .Popup(p =>
                p.Title(nameof(Agent))
                .ShowTitle(true)
                .DragEnabled(false)
                .CloseOnOutsideClick(true)
                .Position(pos => pos
                    .My(HorizontalAlignment.Center, VerticalAlignment.Top)
                    .At(HorizontalAlignment.Center, VerticalAlignment.Top)
                    .Of(new JS("window"))
                )
            )
        )
        .OnRowInserting(@<text>
            function (e) {
                e.data.officeId = masterOffice.officeId;
            }
        </text>)
    )
}