
@{
    ViewData[nameof(EnumViewData.Title)] = nameof(EnumController.Company);
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script type="text/javascript" src="~/js/company.js"></script>
}

<div class="row mb-4">
    <div class="col-md-12 mb-5 mb-">
        <div class="card">
            <div class="card-body pt-0">
                @(Html.DevExtreme().Form<Company>()
                    .ID("formCompany")
                    .Items(items =>
                    {
                        items.AddGroup()
                            .CssClass("form-first-group")
                            .ColCount(3)
                            .Items(groupItems =>
                            {
                                groupItems.AddSimple().Template("<div class='form-avatar'></div>");
                                groupItems.AddGroup().Items(secondGroupItems =>
                                {
                                    secondGroupItems.AddSimpleFor(m => m.Name);
                                    secondGroupItems.AddSimpleFor(m => m.ABN);
                                    secondGroupItems.AddSimpleFor(m => m.GST)
                                        .Editor(e => e
                                            .NumberBox().ShowSpinButtons(true)
                                        );
                                    secondGroupItems.AddButton()
                                        .ButtonOptions(option => option
                                            .Text("Update Company")
                                            .Icon("fa fa-save")
                                            .OnClick("company.handlers.clickBtnUpdate")
                                        );
                                });
                            });
                        items.AddGroup()
                            .Items(groupItems =>
                            {
                                groupItems.AddSimple().Template(new TemplateName("grid-offices"));
                            });
                    })
                    .OnContentReady("company.handlers.contentReadyFormCompany")
                    .FormData(@Model)
                )
            </div>
        </div>
    </div>
</div>
        
@using (Html.DevExtreme().NamedTemplate("grid-offices"))
{
    <div class="card">
        <div class="card-header">
            Offices
        </div>
        <div class="card-body pt-0">
            @(Html.DevExtreme().DataGrid<Office>()
                .ID("gridOffices")
                .CommonConfigs()
                .Pager(pager => { pager.Visible(false); })
                .DataSource(d => d.Mvc()
                    .Controller(nameof(EnumController.Offices))
                    .LoadAction("GetOfficesByCompany")
                    .LoadParams(new
                    {
                        companyId = @Model.Id
                    })
                    .InsertAction("Post")
                    .UpdateAction("Put")
                    .DeleteAction("Delete")
                    .Key("Id")
                )
                .Columns(columns =>
                {
                    columns.AddFor(m => m.Address.StreetAddress).Caption("Address");
                    columns.AddFor(m => m.Address.Suburb).Caption("Suburb");
                    columns.AddFor(m => m.Address.State).Caption("State")
                        .Lookup(lookup => lookup.DataSource(new JS("states"))); // data from /js/data/states.js
                    columns.AddFor(m => m.Address.PostCode).Caption("Postcode");
                })
                .Editing(e =>
                    e.Mode(GridEditMode.Popup)
                    .UseIcons(true)
                    .AllowAdding(true)
                    .AllowUpdating(true)
                    .AllowDeleting(true)
                    .Popup(DXGridConfigs.EditingPopup(ViewData[nameof(EnumViewData.Title)].ToString()))
                )
                .MasterDetail(m => m
                    .Enabled(true)
                    .Template(new TemplateName("grid-office-details"))
                    .AutoExpandAll(false)
                )
                .OnRowInserting(@<text>
                    function (e) {
                        e.data.companyId = @Model.Id
                    }
                </text>)
            )
        </div>
    </div>
}

@using (Html.DevExtreme().NamedTemplate("grid-office-details"))
{
    @(Html.DevExtreme().TabPanel()
        .FocusStateEnabled(false)
        .ElementAttr("class", "tabPanel")
        .Items(items =>
        {
            items.Add()
                .Title("Agents")
                .Template(new TemplateName("grid-office-agents"))
                .Option("masterOffice", new { officeId = new JS("data.Id") });
        })
    )
}


@using (Html.DevExtreme().NamedTemplate("grid-office-agents"))
{
    @(Html.DevExtreme().DataGrid<Agent>()
        .ID("grid-office-agents-" + new JS("masterOffice.officeId"))
        .CommonConfigs()
        .DataSource(d => d.Mvc()
            .Controller(nameof(EnumController.Agents))
            .LoadAction("GetAgentsByOffice")
            .LoadParams(new
            {
                officeId = new JS("masterOffice.officeId")
            })
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("Id")
        )
        .Paging(DXGridConfigs.DetailsPaging())
        .Pager(DXGridConfigs.Pager())
        .Columns(columns =>
        {
            columns.AddFor(m => m.ContactName);
            columns.AddFor(m => m.ContactNumber);
            columns.AddFor(m => m.EMail);
        })
        .Editing(e =>
            e.Mode(GridEditMode.Popup)
            .UseIcons(true)
            .AllowAdding(true)
            .AllowUpdating(true)
            .AllowDeleting(true)
            .Popup(DXGridConfigs.EditingPopup(nameof(Agent)))
        )
        .OnRowInserting(@<text>
            function (e) {
                e.data.officeId = masterOffice.officeId;
            }
        </text>)
    )
}