
@{
    ViewData[nameof(EnumViewData.Title)] = "Lead Assignments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mb-4 align-items-center">
    <div class="col-md-6 mb-5">
        <div class="card">
            <div class="card-body pt-0">
                <div class="card-header">Search Partners</div>
                @(Html.DevExtreme().DataGrid<PartnerBranch>()
                    .CommonConfigs("gridPartnerBranches")
                    .DataSource(ds => ds.Mvc()
                        .Controller(nameof(EnumController.PartnerBranches))
                        .LoadAction("GetBranchesByLeadType")
                        .LoadParams(new
                        {
                            leadTypeId = @Model.LeadTypeId
                        })
                        .Key("Id")
                    )
                    .Columns(c => {
                        c.Add()
                            .Width("15%")
                            .CellTemplate(@<text>
                                <img src="@ImageHelper.PATH_PARTNER<%= data.Partner.Logo %>" class="grid-partner-logo" 
                                     data-toggle="tooltip" data-placement="bottom" title="<%= data.Partner.Name %>"/>
                            </text>);
                        c.Add()
                            .Width("30%")
                            .CellTemplate(@<text>
                                <%= data.Address.State %>, <%= data.Address.PostCode %>
                                <a data-toggle="tooltip" 
                                    data-placement="bottom" 
                                    data-html="true" 
                                    title="<%= data.Address.StreetAddress %>, <%= data.Address.Suburb %>, <%= data.Address.State %> <%= data.Address.PostCode %>">
								    <span class="batch-icon batch-icon-zoom-in-alt text-priamry"></span>
							    </a>
                            </text>);
                        c.Add().CellTemplate(@<text>
                            <span class="badge badge-warning">Waiting <span class="badge badge-light">12</span></span>
                            <span class="badge badge-success">Accepted <span class="badge badge-light">39</span></span>
                            <span class="badge badge-danger">Rejected <span class="badge badge-light">14</span></span>
                        </text>);
                    })
                    .OnContentReady(@<text>
                        function(e) {
                            CustomGridEvent.onContentReady(e, "PartnerBranches");
                            $('[data-toggle="tooltip"]').tooltip();
                        }
                    </text>)
                    .OnToolbarPreparing(@<text>
                        function(e) {
                            CustomGridEvent.onToolbarPreparing(e, "PartnerBranches");
                        }
                    </text>)
                )
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="row mb-4">
            <a id="btnAdd" class="btn btn-block btn-outline-primary">
                <i class="fa fa-chevron-circle-right icon-xxx-large"></i>
            </a>
        </div>
        <div class="row mb-4">
            <a id="btnDelete" class="btn btn-block btn-outline-primary">
                <i class="fa fa-chevron-circle-left icon-xxx-large"></i>
            </a>
        </div>
    </div>
    <div class="col-md-4 mb-5">
        <div class="card">
            <div class="card-body pt-0">
                <div class="card-header">Selecting Partners</div>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-12 mb-5">
        <div class="card">
            <div class="card-body pt-0">
                @(Html.DevExtreme().DataGrid<LeadAssignment>()
                    .CommonConfigs("gridLeadAssignments")
                    .DataSource(ds => ds.Mvc()
                        .Controller(nameof(EnumController.LeadAssignments))
                        .LoadAction("Get")
                        .LoadParams(new
                        {
                            leadId = @Model.Id
                        })
                        .DeleteAction("Delete")
                        .Key("Id")
                    )
                    .Editing(e => e
                        .Mode(GridEditMode.Popup)
                        .UseIcons(true)
                        .AllowAdding(false)
                        .AllowUpdating(false)
                        .AllowDeleting(true)
                        .Popup(DXGridConfigs.EditingPopup(nameof(LeadAssignment)))
                    )
                    .OnContentReady(@<text>
                        function(e) {
                            CustomGridEvent.onContentReady(e, "LeadAssignments");
                            $('[data-toggle="tooltip"]').tooltip();
                        }
                    </text>)
                    .OnToolbarPreparing(@<text>
                        function(e) {
                            CustomGridEvent.onToolbarPreparing(e, "LeadAssignments");
                        }
                    </text>)
                )
            </div>
        </div>
    </div>
</div>