
@{
    ViewData[nameof(EnumViewData.Title)] = "Partner Assignments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*The Model is Lead instance*@

@section Scripts {
    <script type="text/javascript" src="~/js/viewmodels/LeadAssignmentSelectedPartnerViewModel.js"></script>
    <script type="text/javascript" src="~/js/assignment.js"></script>
    <script type="text/javascript" src="~/js/ajax.js"></script>
    <script type="text/javascript" src="~/js/action.js"></script>
}

<input type="hidden" id="__leadId" value="@Model.Id" />

<div class="row mb-4">
    <div class="col-md-12">
        <div class="card">
            <div class="card-user-profile">
                <div class="profile-page-left">
                    <h4><i class="batch-icon batch-icon-podcast"></i> Type of Lead</h4>
                    <h5 class="pl-4">
                        <img src="@ImageHelper.PATH_LEAD_TYPE@Model.LeadType.Image" class="lead-type-img" />
                        @Model.LeadType.Name
                    </h5>
                    <hr />
                    <h4><i class="batch-icon batch-icon-notes"></i> Lead Details</h4>
                    <h5 class="pl-4">@Model.Details</h5>
                    <hr />
                    <h4><i class="batch-icon batch-icon-user-alt"></i> Customer Info</h4>
                    <h5 class="pl-4">@Model.Customer.ContactName &#64; @Model.Customer.BusinessName</h5>
                    <h5 class="pl-4"><i class="fa fa-phone"></i> @Model.Customer.ContactNumber</h5>
                    <h5 class="pl-4"><i class="fa fa-map-marker"></i> @AddressHelper.MergeAddress(Model.Customer.Address.StreetAddress, Model.Customer.Address.Suburb, Model.Customer.Address.State, Model.Customer.Address.PostCode)</h5>
                    <hr />
                </div>
                <div class="profile-page-center">
                    @(Html.DevExtreme().DataGrid<LeadAssignmentViewModel>()
                        .CommonConfigs("gridLeadAssignments")
                        .DataSource(ds => ds.Mvc()
                            .Controller(nameof(EnumController.LeadAssignments))
                            .LoadAction("Get")
                            .LoadParams(new
                            {
                                leadId = @Model.Id
                            })
                            .DeleteAction("Delete")
                            .Key("Id")
                        )
                        .Columns(c => {
                            c.Add()
                                .CellTemplate(@<text>
                                    <div class="d-flex justify-content-around">
                                        <img src="<%= data.PartnerLogo %>" class="grid-partner-logo" 
                                             data-toggle="tooltip" data-placement="bottom" title="<%= data.PartnerName %>"/>

                                        <span>
                                            <%= data.PartnerBranchState %>, <%= data.PartnerBranchPostCode %>

                                            <a data-toggle="tooltip"
                                               data-placement="bottom"
                                               data-html="true"
                                               title="<%= data.PartnerBranchAddress %>">
                                                    <span class="batch-icon batch-icon-zoom-in-alt text-priamry"></span>
                                            </a>
                                        </span>
                                    </div>
                                </text>);
                            c.Add().Caption("Status")
                                .CellTemplate(@<text>
                                    <%= data.StatusTag %>
                                    <a href="#/" data-toggle="tooltip"
                                        data-placement="bottom"
                                        data-html="true"
                                        title="<%= data.History %>">
                                        <span class="batch-icon batch-icon-zoom-in-alt text-priamry"></span>
                                    </a>
                                </text>);
                            c.Add()
                                .CellTemplate(@<text>
                                    @(Html.DevExtreme().SelectBox()
                                        .DataSource(new JS("data.Actions"))
                                        .ActionCommonConfigs()
                                    )
                                </text>);
                        })
                        .Editing(e => e
                            .Mode(GridEditMode.Popup)
                            .UseIcons(true)
                            .AllowAdding(false)
                            .AllowUpdating(false)
                            .AllowDeleting(true)
                            .Popup(DXGridConfigs.EditingPopup(nameof(LeadAssignment)))
                        )
                        .OnContentReady(@<text>
                            function(e) {
                                CustomGridEvent.onContentReady(e, "LeadAssignments");
                                $('[data-toggle="tooltip"]').tooltip();
                            }
                        </text>)
                        .OnToolbarPreparing(@<text>
                            function(e) {
                                CustomGridEvent.onToolbarPreparing(e, "LeadAssignments");
                            }
                        </text>)
                        .OnRowRemoved(@<text>
                            function(e) {
                                assignment.refreshGridSearchBranches();
                            }
                        </text>)
                    )
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4 align-items-center">
    <div class="col-md-6 mb-5 align-self-stretch">
        <div class="card">
            <div class="card-body pt-0">
                <div class="card-header">Search Partners</div>
                @(Html.DevExtreme().DataGrid<PartnerBranch>()
                    .CommonConfigs("gridSearchBranches")
                    .DataSource(ds => ds.Mvc()
                        .Controller(nameof(EnumController.PartnerBranches))
                        .LoadAction("GetBranchesFilteredByLead")
                        .LoadParams(new
                        {
                            leadId = @Model.Id,
                            leadTypeId = @Model.LeadTypeId
                        })
                        .Key("Id")
                    )
                    .Columns(c => {
                        c.Add()
                            .CellTemplate(@<text>
                                <div class="d-flex justify-content-between">
                                    <img src="@ImageHelper.PATH_PARTNER<%= data.Partner.Logo %>" class="grid-partner-logo" 
                                         data-toggle="tooltip" data-placement="bottom" title="<%= data.Partner.Name %>"/>

                                    <%= data.Address.State %>, <%= data.Address.PostCode %>

                                    <a data-toggle="tooltip" 
                                        data-placement="bottom" 
                                        data-html="true" 
                                        title="<%= data.Address.StreetAddress %>, <%= data.Address.Suburb %>, <%= data.Address.State %> <%= data.Address.PostCode %>">
								        <span class="batch-icon batch-icon-zoom-in-alt text-priamry"></span>
							        </a>
                                </div>
                            </text>);
                        c.Add()
                            .Width("60%")
                            .CellTemplate(@<text>
                                <span class="badge badge-warning">Waiting <span class="badge badge-light">12</span></span>
                                <span class="badge badge-success">Accepted <span class="badge badge-light">39</span></span>
                                <span class="badge badge-danger">Rejected <span class="badge badge-light">14</span></span>
                            </text>);
                    })
                    .Selection(DXGridConfigs.SelectionCheckBoxMode())
                    .OnContentReady(@<text>
                        function(e) {
                            CustomGridEvent.onContentReady(e, "SearchBranches");
                            
                            $('[data-toggle="tooltip"]').tooltip();

                            assignment.handlers.clickBtnAdd();
                        }
                    </text>)
                    .OnToolbarPreparing(@<text>
                        function(e) {
                            CustomGridEvent.onToolbarPreparing(e, "SearchBranches");
                        }
                    </text>)
                )
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="row mb-4">
            <a id="btnAdd" class="btn btn-block btn-outline-primary">
                <i class="fa fa-chevron-circle-right icon-xxx-large"></i>
            </a>
        </div>
        <div class="row mb-4">
            <a id="btnRemove" class="btn btn-block btn-outline-primary">
                <i class="fa fa-chevron-circle-left icon-xxx-large"></i>
            </a>
        </div>
    </div>
    <div class="col-md-4 mb-5 align-self-stretch">
        <div class="card">
            <div class="card-body pt-0">
                <div class="card-header">Selected Partners</div>
                @(Html.DevExtreme().DataGrid<PartnerBranch>()
                    .CommonConfigs("gridSelectedBranches")
                    .DataSource(new JS("assignment.selectedBranches"))
                    .Columns(c => {
                        c.Add()
                            .CellTemplate(@<text>
                                <div class="d-flex justify-content-between">
                                    <img src="@ImageHelper.PATH_PARTNER<%= data.Partner.Logo %>" class="grid-partner-logo" 
                                         data-toggle="tooltip" data-placement="bottom" title="<%= data.Partner.Name %>"/>

                                    <span>
                                        <%= data.Address.State %>, <%= data.Address.PostCode %>

                                        <a data-toggle="tooltip"
                                           data-placement="bottom"
                                           data-html="true"
                                           title="<%= data.Address.StreetAddress %>, <%= data.Address.Suburb %>, <%= data.Address.State %> <%= data.Address.PostCode %>">
                                            <span class="batch-icon batch-icon-zoom-in-alt text-priamry"></span>
                                        </a>
                                    </span>
                                </div>
                            </text>);
                    })
                    .Selection(DXGridConfigs.SelectionCheckBoxMode())
                    .OnContentReady(@<text>
                        function(e) {
                            CustomGrid.setToolbarTotalItems("SelectedBranches", assignment.selectedBranches);
                            $('[data-toggle="tooltip"]').tooltip();

                            assignment.handlers.clickBtnRemove();
                            assignment.handlers.clickBtnAssign();
                        }
                    </text>)
                    .OnToolbarPreparing(@<text>
                        function(e) {
                            CustomGridEvent.onToolbarPreparing(e, "SelectedBranches");
                        }
                    </text>)
                )
                <button type="button" id="btnAssign" class="btn btn-block btn-primary btn-lg">
                    <i class="fa fa-save"></i> Assign Partners
                </button>
            </div>
        </div>
    </div>
</div>